// Generated by Dagger (https://dagger.dev).
package global.cloud.storage.di;

import android.content.Context;
import android.content.Intent;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AuthModule_ProvideSignInIntentFactory implements Factory<Intent> {
  private final AuthModule module;

  private final Provider<Context> contextProvider;

  public AuthModule_ProvideSignInIntentFactory(AuthModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public Intent get() {
    return provideSignInIntent(module, contextProvider.get());
  }

  public static AuthModule_ProvideSignInIntentFactory create(AuthModule module,
      Provider<Context> contextProvider) {
    return new AuthModule_ProvideSignInIntentFactory(module, contextProvider);
  }

  public static Intent provideSignInIntent(AuthModule instance, Context context) {
    return Preconditions.checkNotNullFromProvides(instance.provideSignInIntent(context));
  }
}
