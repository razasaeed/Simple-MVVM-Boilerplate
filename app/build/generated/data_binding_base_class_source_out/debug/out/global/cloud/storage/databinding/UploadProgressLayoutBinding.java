// Generated by data binding compiler. Do not edit!
package global.cloud.storage.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.airbnb.lottie.LottieAnimationView;
import com.google.android.material.button.MaterialButton;
import global.cloud.storage.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class UploadProgressLayoutBinding extends ViewDataBinding {
  @NonNull
  public final MaterialButton btnDone;

  @NonNull
  public final LottieAnimationView lavProgress;

  @NonNull
  public final ConstraintLayout lyUploadStatus;

  @NonNull
  public final TextView tvPermission;

  @NonNull
  public final TextView tvProgress;

  @NonNull
  public final TextView tvTotalFiles;

  @NonNull
  public final TextView tvUploadedFiles;

  @NonNull
  public final TextView tvUploadedFilesTitle;

  @NonNull
  public final TextView tvUploadedSuccessfully;

  protected UploadProgressLayoutBinding(Object _bindingComponent, View _root, int _localFieldCount,
      MaterialButton btnDone, LottieAnimationView lavProgress, ConstraintLayout lyUploadStatus,
      TextView tvPermission, TextView tvProgress, TextView tvTotalFiles, TextView tvUploadedFiles,
      TextView tvUploadedFilesTitle, TextView tvUploadedSuccessfully) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnDone = btnDone;
    this.lavProgress = lavProgress;
    this.lyUploadStatus = lyUploadStatus;
    this.tvPermission = tvPermission;
    this.tvProgress = tvProgress;
    this.tvTotalFiles = tvTotalFiles;
    this.tvUploadedFiles = tvUploadedFiles;
    this.tvUploadedFilesTitle = tvUploadedFilesTitle;
    this.tvUploadedSuccessfully = tvUploadedSuccessfully;
  }

  @NonNull
  public static UploadProgressLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.upload_progress_layout, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static UploadProgressLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<UploadProgressLayoutBinding>inflateInternal(inflater, R.layout.upload_progress_layout, root, attachToRoot, component);
  }

  @NonNull
  public static UploadProgressLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.upload_progress_layout, null, false, component)
   */
  @NonNull
  @Deprecated
  public static UploadProgressLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<UploadProgressLayoutBinding>inflateInternal(inflater, R.layout.upload_progress_layout, null, false, component);
  }

  public static UploadProgressLayoutBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static UploadProgressLayoutBinding bind(@NonNull View view, @Nullable Object component) {
    return (UploadProgressLayoutBinding)bind(component, view, R.layout.upload_progress_layout);
  }
}
