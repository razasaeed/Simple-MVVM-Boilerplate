// Generated by data binding compiler. Do not edit!
package global.cloud.storage.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import global.cloud.storage.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class LayoutStorageNotReadyBinding extends ViewDataBinding {
  @NonNull
  public final Button btnOpenSettings;

  @NonNull
  public final ImageView imageView16;

  @NonNull
  public final ImageView ivClose;

  @NonNull
  public final TextView textView10;

  @NonNull
  public final TextView textView11;

  @NonNull
  public final TextView textView12;

  @NonNull
  public final TextView textView13;

  @NonNull
  public final TextView textView29;

  protected LayoutStorageNotReadyBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button btnOpenSettings, ImageView imageView16, ImageView ivClose, TextView textView10,
      TextView textView11, TextView textView12, TextView textView13, TextView textView29) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnOpenSettings = btnOpenSettings;
    this.imageView16 = imageView16;
    this.ivClose = ivClose;
    this.textView10 = textView10;
    this.textView11 = textView11;
    this.textView12 = textView12;
    this.textView13 = textView13;
    this.textView29 = textView29;
  }

  @NonNull
  public static LayoutStorageNotReadyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_storage_not_ready, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static LayoutStorageNotReadyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<LayoutStorageNotReadyBinding>inflateInternal(inflater, R.layout.layout_storage_not_ready, root, attachToRoot, component);
  }

  @NonNull
  public static LayoutStorageNotReadyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_storage_not_ready, null, false, component)
   */
  @NonNull
  @Deprecated
  public static LayoutStorageNotReadyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<LayoutStorageNotReadyBinding>inflateInternal(inflater, R.layout.layout_storage_not_ready, null, false, component);
  }

  public static LayoutStorageNotReadyBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static LayoutStorageNotReadyBinding bind(@NonNull View view, @Nullable Object component) {
    return (LayoutStorageNotReadyBinding)bind(component, view, R.layout.layout_storage_not_ready);
  }
}
