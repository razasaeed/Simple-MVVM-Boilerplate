// Generated by data binding compiler. Do not edit!
package global.cloud.storage.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import global.cloud.storage.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class AppsCellBinding extends ViewDataBinding {
  @NonNull
  public final Guideline glCardPremium;

  @NonNull
  public final ImageView ivAppIcon;

  @NonNull
  public final ImageView ivAppsSelection;

  @NonNull
  public final ConstraintLayout mainCOns;

  @NonNull
  public final TextView tvAppName;

  @NonNull
  public final TextView tvAppSize;

  protected AppsCellBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Guideline glCardPremium, ImageView ivAppIcon, ImageView ivAppsSelection,
      ConstraintLayout mainCOns, TextView tvAppName, TextView tvAppSize) {
    super(_bindingComponent, _root, _localFieldCount);
    this.glCardPremium = glCardPremium;
    this.ivAppIcon = ivAppIcon;
    this.ivAppsSelection = ivAppsSelection;
    this.mainCOns = mainCOns;
    this.tvAppName = tvAppName;
    this.tvAppSize = tvAppSize;
  }

  @NonNull
  public static AppsCellBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.apps_cell, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static AppsCellBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<AppsCellBinding>inflateInternal(inflater, R.layout.apps_cell, root, attachToRoot, component);
  }

  @NonNull
  public static AppsCellBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.apps_cell, null, false, component)
   */
  @NonNull
  @Deprecated
  public static AppsCellBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<AppsCellBinding>inflateInternal(inflater, R.layout.apps_cell, null, false, component);
  }

  public static AppsCellBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static AppsCellBinding bind(@NonNull View view, @Nullable Object component) {
    return (AppsCellBinding)bind(component, view, R.layout.apps_cell);
  }
}
